#!/bin/bash

echo "Starting run script..."

# Check the number of arguments provided
if [ "$#" -lt 1 ]; then
    echo "Error: No arguments provided."
    exit 1
fi

# Parse the command
COMMAND=$1

# Check which command is being executed
case $COMMAND in
    "install")
        # Check if node and npm are installed
        if ! command -v node &> /dev/null; then
            echo "Node is not installed. Please install Node.js first."
            exit 1
        fi

        if ! command -v npm &> /dev/null; then
            echo "npm is not installed. Please install npm first."
            exit 1
        fi

        # Install typescript globally
        npm install -g typescript

        # Install project dependencies
        npm install

        # Install jest and ts-jest for testing
        npm install --save-dev jest ts-jest @types/jest

        # Initialize jest configuration
        npx ts-jest config:init

        echo "Dependencies installed..."
        ;;

    "fetchGitHubInfo")
    # Compile TypeScript code
    tsc fetchGitHubInfo.ts

    # Assuming $2 contains the filename to be parsed
    node fetchGitHubInfo.js "$2"
    ;;
    
    "test")
        # Run jest for testing. Ensure that your TypeScript tests are either in a "__tests__" folder or end with ".test.ts".
        npx jest

        # Note: The output format will depend on your jest configuration and tests. Adjust as necessary.
        ;;
    
    *)
        # Check if the file exists
        if [ ! -f "$COMMAND" ]; then
            echo "Error: File $COMMAND not found."
            exit 1
        fi

        # Compile the TypeScript file and check for errors
        tsc parser.ts
        if [ $? -ne 0 ]; then
            echo "Error: Compilation failed."
            exit 1
        fi

        # Run the compiled JavaScript file
        node parser.js "$COMMAND"
        echo "Successfully compiled parser.ts to parser.js"
        ;;
esac

echo "Ending run script..."
exit 0
